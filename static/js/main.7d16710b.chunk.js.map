{"version":3,"sources":["agey/components/age/index.js","agey/index.js","index.js"],"names":["sid","Age","useState","time","setTime","init","setInit","dob","setDob","job","setJob","dobTime","setDobTime","useEffect","forEach","id","clearTimeout","length","push","setTimeout","moment","currentMoment","currentMoment1","birthDayMoment","jobFirstDayMoment","nextBirthDayMoment","year","prevBirthDayMoment","subtract","actualAge","months","diff","days","this","hours","minutes","seconds","milliSeconds","livedFor","years","milliseconds","jobExperience","formatValue","num","twoDigit","toFixed","toString","animateNumber","duration","value","className","animateText","renderText","param","class","type","name","max","Date","getFullYear","getMonth","getDate","onChange","e","target","Agey","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d16710b.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport AnimatedNumber from \"animated-number-react\";\n\nlet sid = [];\n\nexport default function Age() {\n  const [time, setTime] = useState(null);\n  const [init, setInit] = useState(false);\n  const [dob, setDob] = useState(\"1989-11-17\");\n  const [job, setJob] = useState(\"2014-05-14\");\n  const [dobTime, setDobTime] = useState(\"08:50\");\n\n  const changeDob = (e) => {\n    setDob(e.target.value);\n  };\n\n  const changeDobTime = (e) => {\n    setDobTime(e.target.value);\n  };\n  const changeJob = (e) => {\n    setJob(e.target.value);\n  };\n\n  useEffect(() => {\n    setInit(true);\n    sid.forEach((id) => clearTimeout(id));\n    sid.length = 0;\n    sid.push(\n      setTimeout(() => {\n        setTime(moment());\n      }, 1000)\n    );\n  }, [time]);\n\n  const currentMoment = moment(),\n    currentMoment1 = moment(),\n    birthDayMoment = moment(dob + dobTime, \"YYYY-MM-DD HH:mm\"),\n    jobFirstDayMoment = moment(job, \"YYYY-MM-DD\"),\n    nextBirthDayMoment = moment(birthDayMoment).year(currentMoment.year()),\n    prevBirthDayMoment = moment(nextBirthDayMoment).subtract(1, \"year\"),\n    actualAge = {\n      months: currentMoment.diff(prevBirthDayMoment, \"months\"),\n      days() {\n        return currentMoment.subtract(this.months, \"months\").diff(prevBirthDayMoment, \"days\");\n      },\n      hours() {\n        return currentMoment\n          .subtract(this.months, \"months\")\n          .subtract(this.days() - 1, \"days\")\n          .diff(prevBirthDayMoment, \"hours\");\n      },\n      minutes() {\n        return currentMoment\n          .subtract(this.months, \"months\")\n          .subtract(this.days() - 1, \"days\")\n          .subtract(this.hours(), \"hours\")\n          .diff(prevBirthDayMoment, \"minutes\");\n      },\n      seconds() {\n        return currentMoment\n          .subtract(this.months, \"months\")\n          .subtract(this.days() - 1, \"days\")\n          .subtract(this.hours(), \"hours\")\n          .subtract(this.minutes(), \"minutes\")\n          .diff(prevBirthDayMoment, \"seconds\");\n      },\n      milliSeconds() {\n        return currentMoment\n          .subtract(this.months, \"months\")\n          .subtract(this.days() - 1, \"days\")\n          .subtract(this.hours(), \"hours\")\n          .subtract(this.minutes(), \"minutes\")\n          .subtract(this.seconds(), \"seconds\")\n          .diff(prevBirthDayMoment, \"milliseconds\");\n      },\n    },\n    livedFor = {\n      years: currentMoment.diff(birthDayMoment, \"years\"),\n      months: currentMoment.diff(birthDayMoment, \"months\"),\n      days: currentMoment.diff(birthDayMoment, \"days\"),\n      hours: currentMoment.diff(birthDayMoment, \"hours\"),\n      minutes: currentMoment.diff(birthDayMoment, \"minutes\"),\n      seconds: currentMoment.diff(birthDayMoment, \"seconds\"),\n      milliseconds: currentMoment.diff(birthDayMoment, \"milliseconds\"),\n    },\n    jobExperience = {\n      years: currentMoment1.diff(jobFirstDayMoment, \"years\"),\n      months() {\n        return currentMoment1.subtract(this.years, \"years\").diff(jobFirstDayMoment, \"months\");\n      },\n      days() {\n        return currentMoment1.subtract(this.months() - 1, \"months\").diff(jobFirstDayMoment, \"days\");\n      },\n    },\n    formatValue = (num) => {\n      return twoDigit(num.toFixed(0));\n    },\n    twoDigit = (num) => {\n      return num.toString().length > 1 ? num : \"0\" + num;\n    },\n    animateNumber = (num) => {\n      function animateText(num) {\n        return <AnimatedNumber duration={init ? 0 : 1000} value={num} formatValue={formatValue} className=\"nums\" />;\n      }\n\n      return animateText(num);\n    },\n    renderText = (num, param) => {\n      return (\n        <div className=\"item\">\n          {animateNumber(num)}\n          <span className=\"prop\">{param}</span>\n        </div>\n      );\n    };\n\n  return (\n    <div>\n      <>\n        <h1 className=\"my-4\">Whats your Age?</h1>\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div class=\"input-group my-3\">\n              <span class=\"input-group-text\">D.O.B</span>\n              <input class=\"form-control\" type=\"date\" name=\"\" id=\"\" value={dob} max={`${new Date().getFullYear()}-${new Date().getMonth() + 1}-${new Date().getDate()}`} onChange={changeDob} />\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div class=\"input-group my-3\">\n              <span class=\"input-group-text\">T.O.B</span>\n              <input class=\"form-control\" type=\"time\" name=\"\" id=\"\" value={dobTime} onChange={changeDobTime} />\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div class=\"input-group my-3\">\n              <span class=\"input-group-text\">D.O.J</span>\n              <input class=\"form-control\" type=\"date\" name=\"\" id=\"\" value={job} max={`${new Date().getFullYear()}-${new Date().getMonth() + 1}-${new Date().getDate()}`} onChange={changeJob} />\n            </div>\n          </div>\n        </div>\n\n        <hr className=\"my-4\" />\n        {livedFor.minutes > 0 && (\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <h4 className=\"my-4\">Actual Age:</h4>\n              {renderText(livedFor.years, \"Years\")}\n              {renderText(actualAge.months % 12, \"Months\")}\n              {renderText(actualAge.days(), \"Days\")}\n              {renderText(actualAge.hours(), \"Hours\")}\n              {renderText(actualAge.minutes(), \"Minutes\")}\n              {renderText(actualAge.seconds(), \"Seconds\")}\n              {/* {renderText(actualAge.milliSeconds(), \"MilliSeconds\")} */}\n              <div className=\"ms\"></div>\n            </div>\n            <div className=\"col-md-4\">\n              <h4 className=\"my-4\">You have lived for:</h4>\n              {renderText(livedFor.years, \"Years\")}\n              {renderText(livedFor.months, \"Months\")}\n              {renderText(livedFor.days, \"Days\")}\n              {renderText(livedFor.hours, \"Hours\")}\n              {renderText(livedFor.minutes, \"Minutes\")}\n              {renderText(livedFor.seconds, \"Seconds\")}\n              {/* {renderText(livedFor.milliseconds, \"MilliSeconds\")} */}\n            </div>\n            <div className=\"col-md-4\">\n              <h4 className=\"my-4\">Job Experience:</h4>\n              {renderText(jobExperience.years, \"Years\")}\n              {renderText(jobExperience.months(), \"Months\")}\n              {renderText(jobExperience.days(), \"Days\")}\n            </div>\n          </div>\n        )}\n      </>\n    </div>\n  );\n}\n","import Age from \"./components/age\";\nimport \"./styles/global.scss\";\n\nexport default function Agey() {\n  return (\n    <div className=\"container\">\n      <Age />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\nimport Agey from \"./agey\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <Agey />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}